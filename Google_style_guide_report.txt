scan_rfid.py
    No config file found, using default configuration
    ************* Module scan_rfid
    C:  4, 0: Line too long (125/100) (line-too-long)
    C:  5, 0: Line too long (119/100) (line-too-long)
    C: 37, 0: Line too long (137/100) (line-too-long)
    C: 37, 0: Exactly one space required after comma
        reader.start_reading(lambda tag: subprocess.call(['curl','-u',credentials,'-d',"tag="+tag.epc.decode("utf-8"),'-X','POST',post_url]))
                                                                ^ (bad-whitespace)
    C: 37, 0: Exactly one space required after comma
        reader.start_reading(lambda tag: subprocess.call(['curl','-u',credentials,'-d',"tag="+tag.epc.decode("utf-8"),'-X','POST',post_url]))
                                                                     ^ (bad-whitespace)
    C: 37, 0: Exactly one space required after comma
        reader.start_reading(lambda tag: subprocess.call(['curl','-u',credentials,'-d',"tag="+tag.epc.decode("utf-8"),'-X','POST',post_url]))
                                                                                 ^ (bad-whitespace)
    C: 37, 0: Exactly one space required after comma
        reader.start_reading(lambda tag: subprocess.call(['curl','-u',credentials,'-d',"tag="+tag.epc.decode("utf-8"),'-X','POST',post_url]))
                                                                                      ^ (bad-whitespace)
    C: 37, 0: Exactly one space required after comma
        reader.start_reading(lambda tag: subprocess.call(['curl','-u',credentials,'-d',"tag="+tag.epc.decode("utf-8"),'-X','POST',post_url]))
                                                                                                                     ^ (bad-whitespace)
    C: 37, 0: Exactly one space required after comma
        reader.start_reading(lambda tag: subprocess.call(['curl','-u',credentials,'-d',"tag="+tag.epc.decode("utf-8"),'-X','POST',post_url]))
                                                                                                                          ^ (bad-whitespace)
    C: 37, 0: Exactly one space required after comma
        reader.start_reading(lambda tag: subprocess.call(['curl','-u',credentials,'-d',"tag="+tag.epc.decode("utf-8"),'-X','POST',post_url]))
                                                                                                                                 ^ (bad-whitespace)
    C:  1, 0: Missing module docstring (missing-docstring)
    E: 11, 0: Unable to import 'mercury' (import-error)
    C: 13, 0: Invalid constant name "reader" (invalid-name)
    C: 15, 0: Invalid constant name "runtime" (invalid-name)
    C: 16, 0: Invalid constant name "region" (invalid-name)
    C: 17, 0: Invalid constant name "protocol" (invalid-name)
    C: 18, 0: Invalid constant name "power" (invalid-name)
    C: 19, 0: Invalid constant name "credentials" (invalid-name)
    C: 20, 0: Invalid constant name "post_url" (invalid-name)
    C: 21, 0: Invalid constant name "antenna" (invalid-name)
    C: 12, 0: standard import "import subprocess" should be placed before "import mercury" (wrong-import-order)

    -----------------------------------
    Your code has been rated at 0.38/10

/myflaskapp/mypack/__init__.py
    No config file found, using default configuration
    ************* Module mypack.__init__
    C:  6, 0: Line too long (161/100) (line-too-long)
    C:  9, 0: Trailing whitespace (trailing-whitespace)
    C:  9, 0: Line too long (175/100) (line-too-long)
    C: 16, 0: Line too long (123/100) (line-too-long)
    C: 16, 0: Exactly one space required after comma
    from flask import Flask, jsonify, request, session, g, redirect, url_for,abort, render_template, flash, send_file, Response
                                                                            ^ (bad-whitespace)
    C: 19, 0: Exactly one space required around assignment
    app=Flask(__name__)
       ^ (bad-whitespace)
    C: 27, 0: Exactly one space required after comma
        DATABASE=os.path.join(app.root_path,'rfid.db'),
                                           ^ (bad-whitespace)
    C: 28, 0: Exactly one space required after comma
        DATABASE2=os.path.join(app.root_path,'returned.db'),
                                            ^ (bad-whitespace)
    C: 29, 0: No space allowed around keyword argument assignment
        SECRET_KEY = 'development key',
                   ^ (bad-whitespace)
    C: 33, 0: Exactly one space required after comma
    app.config.from_envvar('RFID_SETTINGS',silent=True)
                                          ^ (bad-whitespace)
    C: 36, 0: Exactly one space required after comma
    logging.basicConfig(filename='app.log',level=logging.DEBUG,format='%(asctime)s %(message)s')
                                          ^ (bad-whitespace)
    C: 36, 0: Exactly one space required after comma
    logging.basicConfig(filename='app.log',level=logging.DEBUG,format='%(asctime)s %(message)s')
                                                              ^ (bad-whitespace)
    C: 55, 0: Exactly one space required after comma
        with app.open_resource('schema.sql',mode='r') as f:
                                           ^ (bad-whitespace)
    C: 63, 0: Exactly one space required after comma
        with app.open_resource('schema2.sql',mode='r') as f:
                                            ^ (bad-whitespace)
    C: 73, 0: Unnecessary parens after 'print' keyword (superfluous-parens)
    C: 78, 0: Exactly one space required after comma
        if not hasattr(g,'sqlite_db'):
                        ^ (bad-whitespace)
    C: 85, 0: Exactly one space required after comma
        if not hasattr(g,'returned_db'):
                        ^ (bad-whitespace)
    C:112, 0: Unnecessary parens after 'if' keyword (superfluous-parens)
    W:113, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:114, 0: Unnecessary parens after 'if' keyword (superfluous-parens)
    W:115, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    W:117, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:122, 0: Wrong hanging indentation (add 4 spaces).
        'Could not verify your access level for that URL.\n'
        ^   | (bad-continuation)
    C:124, 0: Wrong hanging indentation (add 4 spaces).
        {'WWW-Authenticate': 'Basic realm="Login Required"'})
        ^   | (bad-continuation)
    C:158, 0: Trailing whitespace (trailing-whitespace)
    C:162, 0: Trailing whitespace (trailing-whitespace)
    C:165, 0: Exactly one space required after comma
        logging.info("%s accessed the inventory page",auth.username)
                                                     ^ (bad-whitespace)
    C:166, 0: Exactly one space required after comma
        return render_template('show_entries.html',entries=entries) #display the returned results
                                                  ^ (bad-whitespace)
    C:172, 0: Exactly one space required around assignment
        db=get_db()
          ^ (bad-whitespace)
    C:175, 0: Trailing whitespace (trailing-whitespace)
    C:179, 0: Exactly one space required after comma
        return render_template('database_updated.html',entries=entries) #display the returned results
                                                      ^ (bad-whitespace)
    C:181, 0: Line too long (113/100) (line-too-long)
    C:190, 0: Unnecessary parens after 'if' keyword (superfluous-parens)
    C:193, 0: Unnecessary parens after 'if' keyword (superfluous-parens)
    C:197, 0: Exactly one space required after comma
        cur = curs.execute(query,t)
                                ^ (bad-whitespace)
    C:198, 0: Line too long (103/100) (line-too-long)
    C:206, 0: Line too long (116/100) (line-too-long)
    C:207, 0: No space allowed before keyword argument assignment
        return render_template('show_entries.html', entries =entries, result=result)
                                                            ^ (bad-whitespace)
    C:217, 0: Trailing whitespace (trailing-whitespace)
    C:218, 0: Unnecessary parens after 'if' keyword (superfluous-parens)
    C:221, 0: Unnecessary parens after 'if' keyword (superfluous-parens)
    C:225, 0: Exactly one space required after comma
        cur = curs.execute(query,t)
                                ^ (bad-whitespace)
    C:234, 0: Line too long (111/100) (line-too-long)
    C:235, 0: No space allowed before keyword argument assignment
        return render_template('database_updated.html', entries =entries, result=result)
                                                                ^ (bad-whitespace)
    C:242, 0: Exactly one space required before assignment
        db  = get_db()
            ^ (bad-whitespace)
    C:244, 0: Trailing whitespace (trailing-whitespace)
    W:244, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:245, 0: Wrong continued indentation (add 4 spaces).
                [request.form['title'], request.form['tag'], request.form['location']])
                ^   | (bad-continuation)
    W:246, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    W:248, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    W:250, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:254, 0: Trailing whitespace (trailing-whitespace)
    C:254, 0: Line too long (171/100) (line-too-long)
    C:254, 0: Exactly one space required after comma
        logging.info("%s created item (Title: %s, Tag: %s, Location: %s), result = %s",auth.username,request.form['title'],request.form['tag'],request.form['location'],result) 
                                                                                      ^ (bad-whitespace)
    C:254, 0: Exactly one space required after comma
        logging.info("%s created item (Title: %s, Tag: %s, Location: %s), result = %s",auth.username,request.form['title'],request.form['tag'],request.form['location'],result) 
                                                                                                    ^ (bad-whitespace)
    C:254, 0: Exactly one space required after comma
        logging.info("%s created item (Title: %s, Tag: %s, Location: %s), result = %s",auth.username,request.form['title'],request.form['tag'],request.form['location'],result) 
                                                                                                                          ^ (bad-whitespace)
    C:254, 0: Exactly one space required after comma
        logging.info("%s created item (Title: %s, Tag: %s, Location: %s), result = %s",auth.username,request.form['title'],request.form['tag'],request.form['location'],result) 
                                                                                                                                              ^ (bad-whitespace)
    C:254, 0: Exactly one space required after comma
        logging.info("%s created item (Title: %s, Tag: %s, Location: %s), result = %s",auth.username,request.form['title'],request.form['tag'],request.form['location'],result) 
                                                                                                                                                                       ^ (bad-whitespace)
    C:267, 0: Trailing whitespace (trailing-whitespace)
    C:270, 0: Unnecessary parens after 'if' keyword (superfluous-parens)
    C:270, 0: Exactly one space required after comparison
            if (thetag !=''):
                       ^^ (bad-whitespace)
    C:275, 0: Trailing whitespace (trailing-whitespace)
    W:276, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    W:277, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    W:278, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:279, 0: Trailing whitespace (trailing-whitespace)
    W:280, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:281, 0: Trailing whitespace (trailing-whitespace)
    W:281, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:282, 0: Trailing whitespace (trailing-whitespace)
    W:283, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:283, 0: Unnecessary parens after 'if' keyword (superfluous-parens)
    C:284, 0: Line too long (118/100) (line-too-long)
    C:285, 0: Trailing whitespace (trailing-whitespace)
    W:287, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    W:288, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    W:290, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:291, 0: Trailing whitespace (trailing-whitespace)
    C:294, 0: Exactly one space required after comma
        logging.info("%s posted tag %s, result = %s",auth.username, thetag, result)
                                                    ^ (bad-whitespace)
    C:304, 0: Trailing whitespace (trailing-whitespace)
    C:312, 0: Unnecessary parens after 'if' keyword (superfluous-parens)
    W:313, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:313, 0: Exactly one space required after comma
            t = (title,request.form['location'],tag)
                   ^ (bad-whitespace)
    C:313, 0: Exactly one space required after comma
            t = (title,request.form['location'],tag)
                                            ^ (bad-whitespace)
    W:314, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:314, 0: Exactly one space required after comma
            db.execute('UPDATE entries SET title = ?, location =? where tag = ?',t)
                                                                             ^ (bad-whitespace)
    C:316, 0: Exactly one space required after comma
            t = (request.form['location'],tag)
                                         ^ (bad-whitespace)
    W:317, 0: Found indentation with tabs instead of spaces (mixed-indentation)
    C:320, 0: Trailing whitespace (trailing-whitespace)
    C:323, 0: Line too long (152/100) (line-too-long)
    C:332, 0: Trailing whitespace (trailing-whitespace)
    C:338, 0: Trailing whitespace (trailing-whitespace)
    C:339, 0: Exactly one space required after comma
        db.execute('DELETE from entries WHERE tag = ?',tag)
                                                      ^ (bad-whitespace)
    C:345, 0: Line too long (111/100) (line-too-long)
    C:345, 0: Exactly one space required after comma
        logging.info("%s deleted item with tag %s, result = %s", auth.username, request.form['tag'],result != None)
                                                                                                   ^ (bad-whitespace)
    C:367, 0: Wrong continued indentation (add 4 spaces).
                     as_attachment=True)
                     ^   | (bad-continuation)
    ************* Module mypack
    C:  1, 0: Missing module docstring (missing-docstring)
    E: 16, 0: Unable to import 'flask' (import-error)
    C: 19, 0: Invalid constant name "app" (invalid-name)
    C: 21, 0: Invalid constant name "debug" (invalid-name)
    C: 39, 0: Missing function docstring (missing-docstring)
    C: 40, 4: Invalid variable name "rv" (invalid-name)
    C: 46, 0: Missing function docstring (missing-docstring)
    C: 47, 4: Invalid variable name "rv" (invalid-name)
    C: 53, 0: Missing function docstring (missing-docstring)
    C: 54, 4: Invalid variable name "db" (invalid-name)
    C: 55,53: Invalid variable name "f" (invalid-name)
    C: 61, 0: Missing function docstring (missing-docstring)
    C: 62, 4: Invalid variable name "db" (invalid-name)
    C: 63,54: Invalid variable name "f" (invalid-name)
    C: 70, 0: Missing function docstring (missing-docstring)
    C: 77, 0: Missing function docstring (missing-docstring)
    C: 84, 0: Missing function docstring (missing-docstring)
    C: 92, 0: Missing function docstring (missing-docstring)
    C: 93, 4: Invalid variable name "db" (invalid-name)
    C:101, 0: Missing function docstring (missing-docstring)
    W:101,13: Unused argument 'error' (unused-argument)
    R:114, 4: The if statement can be replaced with 'return bool(test)' (simplifiable-if-statement)
    R:114, 4: Unnecessary "else" after "return" (no-else-return)
    C:127, 0: Invalid argument name "f" (invalid-name)
    C:127, 0: Missing function docstring (missing-docstring)
    C:129, 4: Missing function docstring (missing-docstring)
    C:139, 0: Missing function docstring (missing-docstring)
    C:148, 0: Missing function docstring (missing-docstring)
    C:157, 0: Missing function docstring (missing-docstring)
    C:159, 4: Invalid variable name "db" (invalid-name)
    C:171, 0: Missing function docstring (missing-docstring)
    C:172, 4: Invalid variable name "db" (invalid-name)
    C:184, 0: Missing function docstring (missing-docstring)
    C:185, 4: Invalid variable name "db" (invalid-name)
    C:191, 8: Invalid variable name "t" (invalid-name)
    C:194, 8: Invalid variable name "t" (invalid-name)
    C:212, 0: Missing function docstring (missing-docstring)
    C:213, 4: Invalid variable name "db" (invalid-name)
    C:219, 8: Invalid variable name "t" (invalid-name)
    C:222, 8: Invalid variable name "t" (invalid-name)
    C:240, 0: Missing function docstring (missing-docstring)
    C:242, 4: Invalid variable name "db" (invalid-name)
    W:249, 4: No exception type(s) specified (bare-except)
    C:260, 0: Missing function docstring (missing-docstring)
    C:261, 4: Invalid variable name "db" (invalid-name)
    W:289, 4: No exception type(s) specified (bare-except)
    C:271,12: Invalid variable name "t" (invalid-name)
    C:272,12: Invalid variable name "u" (invalid-name)
    W:264, 4: Unused variable 'curs2' (unused-variable)
    C:300, 0: Missing function docstring (missing-docstring)
    C:301, 4: Invalid variable name "db" (invalid-name)
    C:308, 4: Invalid variable name "t" (invalid-name)
    C:313, 5: Invalid variable name "t" (invalid-name)
    C:316, 8: Invalid variable name "t" (invalid-name)
    C:329, 0: Missing function docstring (missing-docstring)
    C:330, 4: Invalid variable name "db" (invalid-name)
    C:350, 0: Missing function docstring (missing-docstring)
    C:351, 4: Invalid variable name "db" (invalid-name)
    C:362, 0: Missing function docstring (missing-docstring)
    C: 17, 0: standard import "from functools import wraps" should be placed before "from flask import Flask, jsonify, request, session, g, redirect, url_for, abort, render_template, flash, send_file, Response" (wrong-import-order)

    -----------------------------------
    Your code has been rated at 2.38/10
